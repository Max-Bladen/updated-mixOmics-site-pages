?background.predict
library(mixOmics)
?background.predict
diablo.nutrimouse <- block.plsda(X, Y) # 1 Run the method
library(mixOmics)
data(nutrimouse)
X <- nutrimouse$lipid
Y <- nutrimouse$gene
diablo.nutrimouse <- block.plsda(X, Y) # 1 Run the method
View(nutrimouse)
Y <- nutrimouse$genotype
diablo.nutrimouse <- block.plsda(X, Y) # 1 Run the method
X <- list(gene = nutrimouse$gene,
lipid = nutrimouse$lipid)
Y <- nutrimouse$genotype
diablo.nutrimouse <- block.plsda(X, Y) # 1 Run the method
plotIndiv(diablo.nutrimouse) # 2 Plot the samples
?background.predict
bgp <- background.predict(diablo.nutrimouse, comp.predicted = 2, dist = "mahalanobis")
diablo.nutrimouse <- block.splsda(X, Y) # 1 Run the method
plotIndiv(diablo.nutrimouse) # 2 Plot the samples
View(nutrimouse)
data(breast.TCGA)
# Extract training data and name each data frame
# Store as list
X <- list(mRNA = breast.TCGA$data.train$mrna,
miRNA = breast.TCGA$data.train$mirna,
protein = breast.TCGA$data.train$protein)
# Outcome
Y <- breast.TCGA$data.train$subtype
diablo.TCGA <- block.splsda(X, Y)
plotIndiv(diablo.TCGA)
plotIndiv(diablo.TCGA, rep.space = "X.variate")
View(breast.TCGA)
plotIndiv(diablo.TCGA, group = breast.TCGA$data.train$subtype)
plotIndiv(diablo.TCGA, group = breast.TCGA$data.train$subtype
pch = breast.TCGA$data.train$subtype)
plotIndiv(diablo.TCGA, group = breast.TCGA$data.train$subtype
pch = breast.TCGA$data.train$subtype)
plotIndiv(diablo.TCGA, group = breast.TCGA$data.train$subtype,
pch = breast.TCGA$data.train$subtype)
plotIndiv(diablo.TCGA, group = breast.TCGA$data.train$subtype,
pch = breast.TCGA$data.train$subtype,
legend = TRUE, legend.title = 'Subtype')
plotIndiv(diablo.TCGA, group = breast.TCGA$data.train$subtype,
pch = breast.TCGA$data.train$subtype,
legend = TRUE, legend.title = 'Subtype',
title = "DIABLO on the Breast TCGA data")
X <- nutrimouse$lipid
Y <- nutrimouse$gene
splsda.nutri <- splsda(X, Y, ncomp = 2)
View(nutrimouse)
X <- nutrimouse$lipid
Y <- nutrimouse$genotype
splsda.nutri <- splsda(X, Y, ncomp = 2)
background.mahal <-  background.predict(splsda.nutri,
comp.predicted = 2,
dist = 'mahalanobis.dist')
plotIndiv(splsda.nutri,  group = nutrimouse$diet,
pch = nutrimouse$genotype,
legend = TRUE, legend.title = 'Diet',
legend.title.pch = 'Genotype',
title = 'sPLS-DA on nutrimouse lipid and gene data')
plotIndiv(splsda.nutri,  group = nutrimouse$diet,
pch = nutrimouse$genotype,
legend = TRUE, legend.title = 'Diet',
legend.title.pch = 'Genotype',
title = 'sPLS-DA on nutrimouse lipid and gene data',
background = background.mahal)
background.mahal <-  background.predict(splsda.nutri,
comp.predicted = 2,
dist = 'max.dist')
background.mahal <-  background.predict(splsda.nutri,
comp.predicted = 2,
dist = 'max.dist')
plotIndiv(splsda.nutri,  group = nutrimouse$diet,
pch = nutrimouse$genotype,
legend = TRUE, legend.title = 'Diet',
legend.title.pch = 'Genotype',
title = 'sPLS-DA on nutrimouse lipid and gene data',
background = background.mahal)
background.max <-  background.predict(splsda.nutri,
comp.predicted = 2,
dist = 'max.dist')
background.max <-  background.predict(splsda.nutri,
comp.predicted = 2,
dist = 'max.dist')
plotIndiv(splsda.nutri, comp = 1:2, group = srbct$class[train],
ind.names = FALSE, title = 'Maximum distance', legend = TRUE,
background = background.max)
plotIndiv(splsda.nutri, comp = 1:2,
ind.names = FALSE, title = 'Maximum distance', legend = TRUE,
background = background.max)
background.max <-  background.predict(splsda.nutri,
comp.predicted = 2,
dist = 'max.dist')
background.max <-  background.predict(splsda.nutri,
comp.predicted = 2,
dist = 'max.dist')
plotIndiv(splsda.nutri,
pch = nutrimouse$genotype,
legend = TRUE, legend.title = 'Diet',
legend.title.pch = 'Genotype',
title = 'sPLS-DA on nutrimouse lipid data',
background = background.mahal)
View(nutrimouse)
plotIndiv(splsda.nutri, group = nutrimouse$diet,
pch = nutrimouse$genotype,
legend = TRUE, legend.title = 'Diet',
legend.title.pch = 'Genotype',
title = 'sPLS-DA on nutrimouse lipid data',
background = background.mahal)
background.mahal <-  background.predict(splsda.nutri,
comp.predicted = 2,
dist = 'mahalabanodis.dist')
background.mahal <-  background.predict(splsda.nutri,
comp.predicted = 2,
dist = 'mahalanobis.dist')
background.mahal <-  background.predict(splsda.nutri,
comp.predicted = 2,
dist = 'mahalanobis.dist')
plotIndiv(splsda.nutri, pch = nutrimouse$genotype,
legend = TRUE, legend.title = 'Diet',
legend.title.pch = 'Genotype',
title = 'sPLS-DA on nutrimouse lipid data',
background = background.mahal)
plotIndiv(splsda.nutri, group = mutrimouse$diet, pch = nutrimouse$genotype,
legend = TRUE, legend.title = 'Diet',
legend.title.pch = 'Genotype',
title = 'sPLS-DA on nutrimouse lipid data',
background = background.mahal)
plotIndiv(splsda.nutri, group = nutrimouse$diet, pch = nutrimouse$genotype,
legend = TRUE, legend.title = 'Diet',
legend.title.pch = 'Genotype',
title = 'sPLS-DA on nutrimouse lipid data',
background = background.mahal)
?block.spls
View(breast.TCGA)
X <- list(mRNA = breast.TCGA$data.train$mrna,
miRNA = breast.TCGA$data.train$mirna)
Y <- breast.TCGA$data.train$protein
blockPLS.TCGA <- block.spls(X, Y)
plotIndiv(blockPLS.TCGA, group = breast.TCGA$data.train$subtype,
pch = breast.TCGA$data.train$subtype,
legend = TRUE, legend.title = 'Subtype',
title = "DIABLO on the Breast TCGA data")
X = nutrimouse$lipid
Y <- nutrimouse$gene
rcca.res <- rcc(X, Y, ncomp = 3, lambda1 = 0.064, lambda2 = 0.008)
plotIndiv(rcca.res, group = nutrimouse$genotype, ind.names = FALSE,
legend = TRUE, title = 'rCCA')
X = nutrimouse$lipid
Y <- nutrimouse$gene
rcca.res <- rcc(X, Y, ncomp = 3, method = 'ridge', lambda1 = 0.064, lambda2 = 0.008)
plotIndiv(rcca.res, group = nutrimouse$genotype, ind.names = FALSE,
legend = TRUE, title = 'rCCA')
data(stemcells)
mint.res <- mint.splsda(X = stemcells$gene, Y = stemcells$celltype, ncomp = 2, keepX = c(10, 5),
study = stemcells$study)
#plot study-specific outputs for all studies
plotIndiv(mint.res, study = "all.partial", legend = TRUE)
plotIndiv(mint.res, study = "2")
col.diet <- color.mixo(as.numeric(nutrimouse$diet))
library(mixOmics)
data("nutrimouse")
X <- list(mRNA = breast.TCGA$data.train$mrna[1:10,],
miRNA = breast.TCGA$data.train$mirna,
protein = breast.TCGA$data.train$protein)
data(breast.TCGA)
X <- list(mRNA = breast.TCGA$data.train$mrna[1:10,],
miRNA = breast.TCGA$data.train$mirna,
protein = breast.TCGA$data.train$protein)
breast.TCGA$data.train$mrna[1:10,]
View(breast.TCGA)
breast.TCGA[["data.train"]][["subtype"]]
idx = seq(1, length(breast.TCGA$data.train$subtype), 5)
idx
length(idx)
idx = seq(1, length(breast.TCGA$data.train$subtype), 10)
length(idx)
data(liver.toxicity)
X <- liver.toxicity$gene
Y <- liver.toxicity$clinic
toxicity.spls <- spls(X, Y, ncomp = 3,
keepX = c(50, 50, 50),
keepY = c(10, 10, 10))
plotArrow(toxicity.spls,
ind.names= liver.toxicity$treatment[, 3],
position.names='end',
group= liver.toxicity$treatment[, 4],
abline = TRUE)
plotArrow(toxicity.spls,
ind.names= liver.toxicity$treatment[, 3],
position.names='start',
group= liver.toxicity$treatment[, 4],
abline = TRUE)
plotArrow(toxicity.spls,
ind.names= liver.toxicity$treatment[, 3],,
group= liver.toxicity$treatment[, 4],
abline = TRUE)
plotArrow(toxicity.spls,
group= liver.toxicity$treatment[, 4],
abline = TRUE)
plotArrow(toxicity.spls,
ind.names= liver.toxicity$treatment[, 3],
position.names='start',
group = liver.toxicity$treatment[, 4],
)
plotArrow(toxicity.spls,
ind.names= liver.toxicity$treatment[, 3],
ind.names.position='start',
group = liver.toxicity$treatment[, 4])
View(liver.toxicity)
plotArrow(toxicity.spls,
ind.names = FALSE,
ind.names.position = 'start',
group = liver.toxicity$treatment[, 4])
plotArrow(toxicity.spls,
ind.names = FALSE,
group = liver.toxicity$treatment[, 4],
col.per.group = color.mixo(1:4),
legend.title = "Treatment time")
?liver.toxicity
View(toxicity.spls)
X <- liver.toxicity$gene
Y <- liver.toxicity$treatment$Treatment.Group
X
dim(x)
dim(X)
length(Y)
toxicity.splsda <- splsda(X, Y, ncomp = 3,
keepX = c(50, 50, 50))
plotArrow(toxicity.splsda,
ind.names = FALSE,
group = liver.toxicity$treatment[, 4],
col.per.group = color.mixo(1:4),
legend.title = "Treatment time (hours)")
rlang::last_error()
plotArrow(toxicity.splsda,
ind.names = FALSE,
group = liver.toxicity$treatment[, 4],
legend.title = "Treatment time (hours)")
plotArrow(toxicity.splsda,
ind.names = FALSE,
legend.title = "Treatment time (hours)")
plotArrow(toxicity.splsda,
legend.title = "Treatment time (hours)")
plotArrow(toxicity.splsda),
plotArrow(toxicity.splsda)
splsda.srbct <- splsda(X, Y, ncomp = 3, keepX = c(50, 50, 50))
data(srbct)
X <- srbct$gen
Y <- srbct$class
splsda.srbct <- splsda(X, Y, ncomp = 3, keepX = c(50, 50, 50))
X <- srbct$gene
Y <- srbct$class
splsda.srbct <- splsda(X, Y, ncomp = 3, keepX = c(50, 50, 50))
plotArrow(splsda.srbct)
dim(X)
length(Y)
library(mixOmics) # load in the mixOmics package
data(nutrimouse)
?breast.TCGA
library(mixOmics)
library(mixOmics)
data(nutrimouse)
X <- nutrimouse$lipid
pca.nutri <- pca(X, ncomp = 2)
plotLoadings(pca.nutri)
View(nutrimouse)
X <- nutrimouse$lipid
Y <- nutrimouse$genotype
plsda.nutri.lipid <- plsda(X, Y)
plotLoadings(plsda.nutri.lipid, contrib = 'min', method = 'median')
library(mixOmics)
data(nutrimouse)
X <- nutrimouse$lipid # extract the lipid concentration data
pca.nutri <- pca(X, ncomp = 2)
plotVar(pca.nutri)
plotVar(scale.pca.lipid, title = 'Nutrimouse lipid, Components 1, 2 and 3', style = '3d')
scale.pca.lipid <- pca(X, ncomp = 3, center = TRUE, scale = TRUE)
X <- nutrimouse$lipid
scale.pca.lipid <- pca(X, ncomp = 3, center = TRUE, scale = TRUE)
plotVar(scale.pca.lipid, title = 'Nutrimouse lipid, Components 1, 2 and 3', style = '3d')
X <- nutrimouse$lipid
Y <- nutrimouse$gene
pls.nutri <- pls(X, Y)
View(pls.nutri)
